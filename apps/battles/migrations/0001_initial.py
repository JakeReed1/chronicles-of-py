# Generated by Django 5.0.1 on 2025-09-25 18:03

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Battle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('battle_type', models.CharField(choices=[('story', 'Story Battle'), ('random', 'Random Encounter'), ('boss', 'Boss Battle'), ('tutorial', 'Tutorial Battle'), ('pvp', 'Player vs Player')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('current_turn', models.IntegerField(default=1)),
                ('turn_order', models.JSONField(default=list)),
                ('victory', models.BooleanField(null=True)),
                ('experience_gained', models.IntegerField(default=0)),
                ('gold_gained', models.IntegerField(default=0)),
                ('items_gained', models.JSONField(default=list)),
                ('code_attempts', models.IntegerField(default=0)),
                ('successful_code_executions', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'battles',
            },
        ),
        migrations.CreateModel(
            name='BattleParticipant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('character_type', models.CharField(max_length=20)),
                ('character_id', models.IntegerField()),
                ('position', models.IntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('temp_attack_modifier', models.FloatField(default=1.0)),
                ('temp_defense_modifier', models.FloatField(default=1.0)),
                ('status_effects', models.JSONField(default=dict)),
            ],
            options={
                'db_table': 'battle_participants',
            },
        ),
        migrations.CreateModel(
            name='BattleTurn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('turn_number', models.IntegerField()),
                ('action_type', models.CharField(max_length=50)),
                ('action_data', models.JSONField(default=dict)),
                ('code_submitted', models.TextField(blank=True)),
                ('code_output', models.TextField(blank=True)),
                ('code_errors', models.JSONField(default=list)),
                ('execution_successful', models.BooleanField(default=False)),
                ('damage_dealt', models.IntegerField(default=0)),
                ('healing_done', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'battle_turns',
                'ordering': ['battle', 'turn_number'],
            },
        ),
        migrations.CreateModel(
            name='ElementType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('color_hex', models.CharField(default='#FFFFFF', max_length=7)),
                ('icon_name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('skill_type', models.CharField(choices=[('attack', 'Attack'), ('magic', 'Magic'), ('support', 'Support'), ('healing', 'Healing'), ('status', 'Status Effect')], max_length=20)),
                ('target_type', models.CharField(choices=[('single_enemy', 'Single Enemy'), ('all_enemies', 'All Enemies'), ('single_ally', 'Single Ally'), ('all_allies', 'All Allies'), ('self', 'Self')], max_length=20)),
                ('mp_cost', models.IntegerField(default=0)),
                ('hp_cost', models.IntegerField(default=0)),
                ('power', models.FloatField(default=1.0)),
                ('animation_name', models.CharField(blank=True, max_length=100)),
                ('cast_message', models.CharField(default='{caster} uses {skill}!', help_text='Use {caster} and {skill} as placeholders', max_length=200)),
                ('code_template', models.TextField(blank=True, help_text='Python code template for this skill')),
                ('required_keywords', models.JSONField(default=list, help_text='Python keywords that must appear in the code')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='StatusEffect',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField()),
                ('icon_name', models.CharField(max_length=100)),
                ('duration_type', models.CharField(choices=[('turns', 'Turns'), ('time', 'Time-based'), ('permanent', 'Until cured')], max_length=20)),
                ('default_duration', models.IntegerField(default=3)),
                ('stat_modifiers', models.JSONField(default=dict, help_text='JSON dict of stat: modifier pairs')),
                ('prevents_action', models.BooleanField(default=False)),
                ('damage_per_turn', models.IntegerField(default=0)),
            ],
        ),
    ]
