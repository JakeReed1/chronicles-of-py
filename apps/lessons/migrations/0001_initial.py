# Generated by Django 5.0.1 on 2025-09-25 18:03

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('battles', '0001_initial'),
        ('characters', '0001_initial'),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='LessonCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('icon', models.CharField(blank=True, max_length=100)),
            ],
            options={
                'verbose_name_plural': 'Lesson Categories',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CodeSnippet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('code', models.TextField()),
                ('language', models.CharField(default='python', max_length=20)),
                ('tags', models.JSONField(default=list)),
                ('concepts', models.ManyToManyField(blank=True, to='core.pythonconcept')),
            ],
        ),
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('order', models.IntegerField(default=0)),
                ('introduction', models.TextField()),
                ('content_sections', models.JSONField(default=list)),
                ('example_code', models.TextField()),
                ('starter_code', models.TextField(blank=True, help_text='Code template for students to start with')),
                ('solution_code', models.TextField(blank=True, help_text='Solution code (hidden from students)')),
                ('required_level', models.IntegerField(default=1)),
                ('experience_reward', models.IntegerField(default=50)),
                ('concept', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='core.pythonconcept')),
                ('prerequisite_lessons', models.ManyToManyField(blank=True, related_name='unlocks_lessons', to='lessons.lesson')),
                ('unlocks_items', models.ManyToManyField(blank=True, to='core.gameitem')),
                ('unlocks_skills', models.ManyToManyField(blank=True, to='battles.skill')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lessons', to='lessons.lessoncategory')),
            ],
            options={
                'ordering': ['category', 'order', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Hint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('gold_cost', models.IntegerField(default=5)),
                ('concept', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.pythonconcept')),
                ('lesson', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson')),
            ],
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('difficulty', models.IntegerField(default=1)),
                ('problem_statement', models.TextField()),
                ('starter_code', models.TextField()),
                ('test_cases', models.JSONField(default=list, help_text='List of {input, expected_output, description}')),
                ('hidden_test_cases', models.JSONField(default=list, help_text='Additional test cases not shown to player')),
                ('hints', models.JSONField(default=list, help_text='List of hints revealed progressively')),
                ('experience_reward', models.IntegerField(default=25)),
                ('gold_reward', models.IntegerField(default=10)),
                ('forbidden_concepts', models.ManyToManyField(blank=True, related_name='forbidden_in_challenges', to='core.pythonconcept')),
                ('required_concepts', models.ManyToManyField(blank=True, to='core.pythonconcept')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='challenges', to='lessons.lesson')),
            ],
            options={
                'ordering': ['lesson', 'difficulty', 'title'],
            },
        ),
        migrations.CreateModel(
            name='PlayerChallengeAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('submitted_code', models.TextField()),
                ('submission_time', models.DateTimeField(auto_now_add=True)),
                ('passed', models.BooleanField(default=False)),
                ('test_results', models.JSONField(default=dict)),
                ('execution_time', models.FloatField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('hints_used', models.IntegerField(default=0)),
                ('challenge', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.challenge')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.player')),
            ],
            options={
                'ordering': ['-submission_time'],
            },
        ),
        migrations.CreateModel(
            name='PlayerLessonProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_completed', models.BooleanField(default=False)),
                ('completion_date', models.DateTimeField(blank=True, null=True)),
                ('time_spent', models.IntegerField(default=0)),
                ('score', models.IntegerField(default=0)),
                ('attempts', models.IntegerField(default=0)),
                ('completed_sections', models.JSONField(default=list)),
                ('current_section', models.IntegerField(default=0)),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='lessons.lesson')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='characters.player')),
            ],
            options={
                'verbose_name': 'Player Lesson Progress',
                'verbose_name_plural': 'Player Lesson Progress',
                'unique_together': {('player', 'lesson')},
            },
        ),
    ]
